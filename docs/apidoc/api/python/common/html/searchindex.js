Search.setIndex({"docnames": ["index", "mlrl", "mlrl.common"], "filenames": ["index.rst", "mlrl.rst", "mlrl.common.rst"], "titles": ["mlrl", "mlrl package", "mlrl.common package"], "terms": {"packag": 0, "subpackag": 0, "common": [0, 1], "submodul": [0, 1], "arrai": [0, 1], "modul": 0, "config": [0, 1], "data_typ": [0, 1], "format": [0, 1], "learner": [0, 1], "option": [0, 1], "rule_learn": [0, 1], "content": 0, "enforce_2d": [1, 2], "enforce_dens": [1, 2], "featurebinningparamet": [1, 2], "featuresamplingparamet": [1, 2], "option_num_retain": [1, 2], "floatparamet": [1, 2], "globalpruningparamet": [1, 2], "aggregation_function_arithmetic_mean": [1, 2], "aggregation_function_max": [1, 2], "aggregation_function_min": [1, 2], "global_pruning_post": [1, 2], "global_pruning_pr": [1, 2], "option_aggregation_funct": [1, 2], "option_interv": [1, 2], "option_min_improv": [1, 2], "option_min_rul": [1, 2], "option_num_past": [1, 2], "option_num_rec": [1, 2], "option_remove_unused_rul": [1, 2], "option_stop_interv": [1, 2], "option_update_interv": [1, 2], "instancesamplingparamet": [1, 2], "intparamet": [1, 2], "labelsamplingparamet": [1, 2], "label_sampling_round_robin": [1, 2], "nominalparamet": [1, 2], "valu": [1, 2], "add_to_argument_pars": [1, 2], "add_valu": [1, 2], "configur": [1, 2], "numericalparamet": [1, 2], "parallelpredictionparamet": [1, 2], "parallelrulerefinementparamet": [1, 2], "parallelstatisticupdateparamet": [1, 2], "paramet": [1, 2], "argument_nam": [1, 2], "partitionsamplingparamet": [1, 2], "option_holdout_set_s": [1, 2], "partition_sampling_random": [1, 2], "ruleinductionparamet": [1, 2], "option_beam_width": [1, 2], "option_max_condit": [1, 2], "option_max_head_refin": [1, 2], "option_min_coverag": [1, 2], "option_min_support": [1, 2], "option_recalculate_predict": [1, 2], "rule_induction_top_down_beam_search": [1, 2], "rule_induction_top_down_greedi": [1, 2], "rulepruningparamet": [1, 2], "rule_pruning_irep": [1, 2], "sequentialpostoptimizationparamet": [1, 2], "option_num_iter": [1, 2], "option_refine_head": [1, 2], "sizestoppingcriterionparamet": [1, 2], "timestoppingcriterionparamet": [1, 2], "configure_argument_pars": [1, 2], "configure_rule_learn": [1, 2], "create_kwargs_from_paramet": [1, 2], "format_dict_kei": [1, 2], "format_enum_valu": [1, 2], "format_string_set": [1, 2], "incrementallearn": [1, 2], "incrementalpredictor": [1, 2], "predict_increment": [1, 2], "predict_proba_increment": [1, 2], "fit": [1, 2], "predict": [1, 2], "predict_proba": [1, 2], "nominalattributelearn": [1, 2], "nominal_attribute_indic": [1, 2], "ordinalattributelearn": [1, 2], "ordinal_attribute_indic": [1, 2], "booleanopt": [1, 2], "fals": [1, 2], "true": [1, 2], "pars": [1, 2], "error_message_invalid_opt": [1, 2], "error_message_invalid_syntax": [1, 2], "creat": [1, 2], "get_bool": [1, 2], "get_float": [1, 2], "get_int": [1, 2], "get_str": [1, 2], "parse_param": [1, 2], "parse_param_and_opt": [1, 2], "rulelearn": [1, 2], "incrementalprobabilitypredictor": [1, 2], "nativeincrementalpredictor": [1, 2], "nativeincrementalprobabilitypredictor": [1, 2], "sparseformat": [1, 2], "csc": [1, 2], "csr": [1, 2], "sparsepolici": [1, 2], "auto": [1, 2], "force_dens": [1, 2], "force_spars": [1, 2], "create_binary_predictor": [1, 2], "create_probability_predictor": [1, 2], "create_score_predictor": [1, 2], "create_sklearn_compatible_prob": [1, 2], "create_sparse_polici": [1, 2], "is_spars": [1, 2], "should_enforce_spars": [1, 2], "author": 2, "michael": 2, "rapp": 2, "ml": 2, "gmail": 2, "com": 2, "provid": 2, "util": 2, "function": 2, "handl": 2, "ndarrai": 2, "convert": 2, "given": 2, "np": 2, "two": 2, "dimension": 2, "i": 2, "one": 2, "A": 2, "return": 2, "least": 2, "dimens": 2, "order": 2, "str": 2, "dtype": 2, "necessari": 2, "enforc": 2, "specif": 2, "memori": 2, "layout": 2, "data": 2, "type": 2, "us": 2, "scipi": 2, "spars": 2, "matrix": 2, "The": 2, "must": 2, "c": 2, "f": 2, "eas": 2, "rule": 2, "learn": 2, "algorithm": 2, "class": 2, "base": 2, "allow": 2, "strategi": 2, "featur": 2, "bin": 2, "sampl": 2, "num_retain": 2, "name": 2, "descript": 2, "mixin": 2, "abc": 2, "an": 2, "abstract": 2, "all": 2, "set": 2, "float": 2, "point": 2, "prune": 2, "entir": 2, "avg": 2, "max": 2, "min": 2, "post": 2, "pre": 2, "aggreg": 2, "interv": 2, "min_improv": 2, "min_rul": 2, "num_past": 2, "num_rec": 2, "remove_unused_rul": 2, "stop_interv": 2, "update_interv": 2, "instanc": 2, "integ": 2, "label": 2, "round": 2, "robin": 2, "nomin": 2, "out": 2, "predefin": 2, "none": 2, "object": 2, "can": 2, "parser": 2, "argumentpars": 2, "config_typ": 2, "add": 2, "command": 2, "line": 2, "argument": 2, "correspond": 2, "thi": 2, "support": 2, "new": 2, "ad": 2, "implement": 2, "contain": 2, "addit": 2, "mai": 2, "specifi": 2, "textual": 2, "itself": 2, "depend": 2, "modifi": 2, "numeric_typ": 2, "numer": 2, "whether": 2, "differ": 2, "exampl": 2, "should": 2, "obtain": 2, "parallel": 2, "potenti": 2, "refin": 2, "search": 2, "statist": 2, "updat": 2, "properti": 2, "holdout": 2, "holdout_set_s": 2, "random": 2, "induct": 2, "individu": 2, "beam_width": 2, "max_condit": 2, "max_head_refin": 2, "min_coverag": 2, "min_support": 2, "recalculate_predict": 2, "top": 2, "down": 2, "beam": 2, "greedi": 2, "irep": 2, "each": 2, "previous": 2, "model": 2, "optim": 2, "being": 2, "relearn": 2, "context": 2, "other": 2, "num_iter": 2, "refine_head": 2, "maximum": 2, "number": 2, "induc": 2, "durat": 2, "second": 2, "after": 2, "which": 2, "cancel": 2, "take": 2, "account": 2, "taken": 2, "arg": 2, "dictionari": 2, "have": 2, "been": 2, "via": 2, "definit": 2, "represent": 2, "dict": 2, "kei": 2, "ha": 2, "enum": 2, "": 2, "string": 2, "singl": 2, "multi": 2, "classifi": 2, "ranker": 2, "increment": 2, "For": 2, "when": 2, "deal": 2, "ensembl": 2, "consist": 2, "sever": 2, "member": 2, "possibl": 2, "consid": 2, "onli": 2, "subset": 2, "from": 2, "apply_next": 2, "step_siz": 2, "int": 2, "current": 2, "remain": 2, "If": 2, "enough": 2, "ar": 2, "avail": 2, "ones": 2, "numpi": 2, "shape": 2, "num_exampl": 2, "num_label": 2, "store": 2, "get_num_next": 2, "yet": 2, "has_next": 2, "bool": 2, "ani": 2, "otherwis": 2, "x": 2, "kwarg": 2, "queri": 2, "num_featur": 2, "predict_scor": 2, "regress": 2, "score": 2, "binari": 2, "probabl": 2, "estim": 2, "baseestim": 2, "y": 2, "train": 2, "ground": 2, "truth": 2, "accord": 2, "keyword": 2, "instead": 2, "nativ": 2, "attribut": 2, "list": 2, "ordin": 2, "structur": 2, "pair": 2, "qualnam": 2, "start": 2, "1": 2, "boundari": 2, "static": 2, "method": 2, "access": 2, "valid": 2, "them": 2, "expect": 2, "comma": 2, "separ": 2, "invalid": 2, "syntax": 2, "classmethod": 2, "allowed_kei": 2, "follow": 2, "key1": 2, "value1": 2, "key2": 2, "value2": 2, "malform": 2, "valueerror": 2, "rais": 2, "default_valu": 2, "boolean": 2, "default": 2, "associ": 2, "THe": 2, "parameter_nam": 2, "allowed_valu": 2, "allowed_values_and_opt": 2, "tupl": 2, "random_st": 2, "feature_format": 2, "label_format": 2, "prediction_format": 2, "scikit": 2, "classif": 2, "rank": 2, "feature_matrix": 2, "rowwisefeaturematrix": 2, "rulemodel": 2, "max_rul": 2, "predictor": 2, "incremental_predictor": 2, "its": 2, "dens": 2, "label_space_info": 2, "labelspaceinfo": 2, "marginal_probability_calibration_model": 2, "marginalprobabilitycalibrationmodel": 2, "joint_probability_calibration_model": 2, "jointprobabilitycalibrationmodel": 2, "polici": 2, "m": 2, "sparse_format": 2, "sparse_valu": 2, "occupi": 2, "less": 2, "than": 2, "check": 2, "explicitli": 2, "prefer": 2, "csr_matrix": 2, "csc_matrix": 2, "To": 2, "abl": 2, "lil_matrix": 2, "dok_matrix": 2, "coo_matrix": 2, "alwai": 2}, "objects": {"": [[1, 0, 0, "-", "mlrl"]], "mlrl": [[2, 0, 0, "-", "common"]], "mlrl.common": [[2, 0, 0, "-", "arrays"], [2, 0, 0, "-", "config"], [2, 0, 0, "-", "data_types"], [2, 0, 0, "-", "format"], [2, 0, 0, "-", "learners"], [2, 0, 0, "-", "options"], [2, 0, 0, "-", "rule_learners"]], "mlrl.common.arrays": [[2, 1, 1, "", "enforce_2d"], [2, 1, 1, "", "enforce_dense"]], "mlrl.common.config": [[2, 2, 1, "", "FeatureBinningParameter"], [2, 2, 1, "", "FeatureSamplingParameter"], [2, 2, 1, "", "FloatParameter"], [2, 2, 1, "", "GlobalPruningParameter"], [2, 2, 1, "", "InstanceSamplingParameter"], [2, 2, 1, "", "IntParameter"], [2, 2, 1, "", "LabelSamplingParameter"], [2, 2, 1, "", "NominalParameter"], [2, 2, 1, "", "NumericalParameter"], [2, 2, 1, "", "ParallelPredictionParameter"], [2, 2, 1, "", "ParallelRuleRefinementParameter"], [2, 2, 1, "", "ParallelStatisticUpdateParameter"], [2, 2, 1, "", "Parameter"], [2, 2, 1, "", "PartitionSamplingParameter"], [2, 2, 1, "", "RuleInductionParameter"], [2, 2, 1, "", "RulePruningParameter"], [2, 2, 1, "", "SequentialPostOptimizationParameter"], [2, 2, 1, "", "SizeStoppingCriterionParameter"], [2, 2, 1, "", "TimeStoppingCriterionParameter"], [2, 1, 1, "", "configure_argument_parser"], [2, 1, 1, "", "configure_rule_learner"], [2, 1, 1, "", "create_kwargs_from_parameters"]], "mlrl.common.config.FeatureSamplingParameter": [[2, 3, 1, "", "OPTION_NUM_RETAINED"]], "mlrl.common.config.GlobalPruningParameter": [[2, 3, 1, "", "AGGREGATION_FUNCTION_ARITHMETIC_MEAN"], [2, 3, 1, "", "AGGREGATION_FUNCTION_MAX"], [2, 3, 1, "", "AGGREGATION_FUNCTION_MIN"], [2, 3, 1, "", "GLOBAL_PRUNING_POST"], [2, 3, 1, "", "GLOBAL_PRUNING_PRE"], [2, 3, 1, "", "OPTION_AGGREGATION_FUNCTION"], [2, 3, 1, "", "OPTION_INTERVAL"], [2, 3, 1, "", "OPTION_MIN_IMPROVEMENT"], [2, 3, 1, "", "OPTION_MIN_RULES"], [2, 3, 1, "", "OPTION_NUM_PAST"], [2, 3, 1, "", "OPTION_NUM_RECENT"], [2, 3, 1, "", "OPTION_REMOVE_UNUSED_RULES"], [2, 3, 1, "", "OPTION_STOP_INTERVAL"], [2, 3, 1, "", "OPTION_UPDATE_INTERVAL"]], "mlrl.common.config.LabelSamplingParameter": [[2, 3, 1, "", "LABEL_SAMPLING_ROUND_ROBIN"]], "mlrl.common.config.NominalParameter": [[2, 2, 1, "", "Value"], [2, 4, 1, "", "add_to_argument_parser"], [2, 4, 1, "", "add_value"], [2, 4, 1, "", "configure"]], "mlrl.common.config.NumericalParameter": [[2, 4, 1, "", "add_to_argument_parser"], [2, 4, 1, "", "configure"]], "mlrl.common.config.Parameter": [[2, 4, 1, "", "add_to_argument_parser"], [2, 5, 1, "", "argument_name"], [2, 4, 1, "", "configure"]], "mlrl.common.config.PartitionSamplingParameter": [[2, 3, 1, "", "OPTION_HOLDOUT_SET_SIZE"], [2, 3, 1, "", "PARTITION_SAMPLING_RANDOM"]], "mlrl.common.config.RuleInductionParameter": [[2, 3, 1, "", "OPTION_BEAM_WIDTH"], [2, 3, 1, "", "OPTION_MAX_CONDITIONS"], [2, 3, 1, "", "OPTION_MAX_HEAD_REFINEMENTS"], [2, 3, 1, "", "OPTION_MIN_COVERAGE"], [2, 3, 1, "", "OPTION_MIN_SUPPORT"], [2, 3, 1, "", "OPTION_RECALCULATE_PREDICTIONS"], [2, 3, 1, "", "RULE_INDUCTION_TOP_DOWN_BEAM_SEARCH"], [2, 3, 1, "", "RULE_INDUCTION_TOP_DOWN_GREEDY"]], "mlrl.common.config.RulePruningParameter": [[2, 3, 1, "", "RULE_PRUNING_IREP"]], "mlrl.common.config.SequentialPostOptimizationParameter": [[2, 3, 1, "", "OPTION_NUM_ITERATIONS"], [2, 3, 1, "", "OPTION_REFINE_HEADS"]], "mlrl.common.format": [[2, 1, 1, "", "format_dict_keys"], [2, 1, 1, "", "format_enum_values"], [2, 1, 1, "", "format_string_set"]], "mlrl.common.learners": [[2, 2, 1, "", "IncrementalLearner"], [2, 2, 1, "", "Learner"], [2, 2, 1, "", "NominalAttributeLearner"], [2, 2, 1, "", "OrdinalAttributeLearner"]], "mlrl.common.learners.IncrementalLearner": [[2, 2, 1, "", "IncrementalPredictor"], [2, 4, 1, "", "predict_incrementally"], [2, 4, 1, "", "predict_proba_incrementally"]], "mlrl.common.learners.IncrementalLearner.IncrementalPredictor": [[2, 4, 1, "", "apply_next"], [2, 4, 1, "", "get_num_next"], [2, 4, 1, "", "has_next"]], "mlrl.common.learners.Learner": [[2, 4, 1, "", "fit"], [2, 4, 1, "", "predict"], [2, 4, 1, "", "predict_proba"]], "mlrl.common.learners.NominalAttributeLearner": [[2, 3, 1, "", "nominal_attribute_indices"]], "mlrl.common.learners.OrdinalAttributeLearner": [[2, 3, 1, "", "ordinal_attribute_indices"]], "mlrl.common.options": [[2, 2, 1, "", "BooleanOption"], [2, 2, 1, "", "Options"], [2, 1, 1, "", "parse_param"], [2, 1, 1, "", "parse_param_and_options"]], "mlrl.common.options.BooleanOption": [[2, 3, 1, "", "FALSE"], [2, 3, 1, "", "TRUE"], [2, 4, 1, "", "parse"]], "mlrl.common.options.Options": [[2, 3, 1, "", "ERROR_MESSAGE_INVALID_OPTION"], [2, 3, 1, "", "ERROR_MESSAGE_INVALID_SYNTAX"], [2, 4, 1, "", "create"], [2, 4, 1, "", "get_bool"], [2, 4, 1, "", "get_float"], [2, 4, 1, "", "get_int"], [2, 4, 1, "", "get_string"]], "mlrl.common.rule_learners": [[2, 2, 1, "", "RuleLearner"], [2, 2, 1, "", "SparseFormat"], [2, 2, 1, "", "SparsePolicy"], [2, 1, 1, "", "create_binary_predictor"], [2, 1, 1, "", "create_probability_predictor"], [2, 1, 1, "", "create_score_predictor"], [2, 1, 1, "", "create_sklearn_compatible_probabilities"], [2, 1, 1, "", "create_sparse_policy"], [2, 1, 1, "", "is_sparse"], [2, 1, 1, "", "should_enforce_sparse"]], "mlrl.common.rule_learners.RuleLearner": [[2, 2, 1, "", "IncrementalPredictor"], [2, 2, 1, "", "IncrementalProbabilityPredictor"], [2, 2, 1, "", "NativeIncrementalPredictor"], [2, 2, 1, "", "NativeIncrementalProbabilityPredictor"]], "mlrl.common.rule_learners.RuleLearner.IncrementalPredictor": [[2, 4, 1, "", "apply_next"], [2, 4, 1, "", "get_num_next"]], "mlrl.common.rule_learners.RuleLearner.IncrementalProbabilityPredictor": [[2, 4, 1, "", "apply_next"]], "mlrl.common.rule_learners.RuleLearner.NativeIncrementalPredictor": [[2, 4, 1, "", "apply_next"], [2, 4, 1, "", "get_num_next"], [2, 4, 1, "", "has_next"]], "mlrl.common.rule_learners.RuleLearner.NativeIncrementalProbabilityPredictor": [[2, 4, 1, "", "apply_next"]], "mlrl.common.rule_learners.SparseFormat": [[2, 3, 1, "", "CSC"], [2, 3, 1, "", "CSR"]], "mlrl.common.rule_learners.SparsePolicy": [[2, 3, 1, "", "AUTO"], [2, 3, 1, "", "FORCE_DENSE"], [2, 3, 1, "", "FORCE_SPARSE"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:attribute", "4": "py:method", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "method", "Python method"], "5": ["py", "property", "Python property"]}, "titleterms": {"mlrl": [0, 1, 2], "packag": [1, 2], "subpackag": 1, "modul": [1, 2], "content": [1, 2], "common": 2, "submodul": 2, "arrai": 2, "config": 2, "data_typ": 2, "format": 2, "learner": 2, "option": 2, "rule_learn": 2}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"mlrl": [[0, "mlrl"]], "mlrl package": [[1, "mlrl-package"]], "Subpackages": [[1, "subpackages"]], "Module contents": [[1, "module-mlrl"], [2, "module-mlrl.common"]], "mlrl.common package": [[2, "mlrl-common-package"]], "Submodules": [[2, "submodules"]], "mlrl.common.arrays module": [[2, "module-mlrl.common.arrays"]], "mlrl.common.config module": [[2, "module-mlrl.common.config"]], "mlrl.common.data_types module": [[2, "module-mlrl.common.data_types"]], "mlrl.common.format module": [[2, "module-mlrl.common.format"]], "mlrl.common.learners module": [[2, "module-mlrl.common.learners"]], "mlrl.common.options module": [[2, "module-mlrl.common.options"]], "mlrl.common.rule_learners module": [[2, "module-mlrl.common.rule_learners"]]}, "indexentries": {"mlrl": [[1, "module-mlrl"]], "module": [[1, "module-mlrl"], [2, "module-mlrl.common"], [2, "module-mlrl.common.arrays"], [2, "module-mlrl.common.config"], [2, "module-mlrl.common.data_types"], [2, "module-mlrl.common.format"], [2, "module-mlrl.common.learners"], [2, "module-mlrl.common.options"], [2, "module-mlrl.common.rule_learners"]], "aggregation_function_arithmetic_mean (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.AGGREGATION_FUNCTION_ARITHMETIC_MEAN"]], "aggregation_function_max (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.AGGREGATION_FUNCTION_MAX"]], "aggregation_function_min (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.AGGREGATION_FUNCTION_MIN"]], "auto (mlrl.common.rule_learners.sparsepolicy attribute)": [[2, "mlrl.common.rule_learners.SparsePolicy.AUTO"]], "booleanoption (class in mlrl.common.options)": [[2, "mlrl.common.options.BooleanOption"]], "csc (mlrl.common.rule_learners.sparseformat attribute)": [[2, "mlrl.common.rule_learners.SparseFormat.CSC"]], "csr (mlrl.common.rule_learners.sparseformat attribute)": [[2, "mlrl.common.rule_learners.SparseFormat.CSR"]], "error_message_invalid_option (mlrl.common.options.options attribute)": [[2, "mlrl.common.options.Options.ERROR_MESSAGE_INVALID_OPTION"]], "error_message_invalid_syntax (mlrl.common.options.options attribute)": [[2, "mlrl.common.options.Options.ERROR_MESSAGE_INVALID_SYNTAX"]], "false (mlrl.common.options.booleanoption attribute)": [[2, "mlrl.common.options.BooleanOption.FALSE"]], "force_dense (mlrl.common.rule_learners.sparsepolicy attribute)": [[2, "mlrl.common.rule_learners.SparsePolicy.FORCE_DENSE"]], "force_sparse (mlrl.common.rule_learners.sparsepolicy attribute)": [[2, "mlrl.common.rule_learners.SparsePolicy.FORCE_SPARSE"]], "featurebinningparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.FeatureBinningParameter"]], "featuresamplingparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.FeatureSamplingParameter"]], "floatparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.FloatParameter"]], "global_pruning_post (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.GLOBAL_PRUNING_POST"]], "global_pruning_pre (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.GLOBAL_PRUNING_PRE"]], "globalpruningparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.GlobalPruningParameter"]], "incrementallearner (class in mlrl.common.learners)": [[2, "mlrl.common.learners.IncrementalLearner"]], "incrementallearner.incrementalpredictor (class in mlrl.common.learners)": [[2, "mlrl.common.learners.IncrementalLearner.IncrementalPredictor"]], "instancesamplingparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.InstanceSamplingParameter"]], "intparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.IntParameter"]], "label_sampling_round_robin (mlrl.common.config.labelsamplingparameter attribute)": [[2, "mlrl.common.config.LabelSamplingParameter.LABEL_SAMPLING_ROUND_ROBIN"]], "labelsamplingparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.LabelSamplingParameter"]], "learner (class in mlrl.common.learners)": [[2, "mlrl.common.learners.Learner"]], "nominalattributelearner (class in mlrl.common.learners)": [[2, "mlrl.common.learners.NominalAttributeLearner"]], "nominalparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.NominalParameter"]], "nominalparameter.value (class in mlrl.common.config)": [[2, "mlrl.common.config.NominalParameter.Value"]], "numericalparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.NumericalParameter"]], "option_aggregation_function (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.OPTION_AGGREGATION_FUNCTION"]], "option_beam_width (mlrl.common.config.ruleinductionparameter attribute)": [[2, "mlrl.common.config.RuleInductionParameter.OPTION_BEAM_WIDTH"]], "option_holdout_set_size (mlrl.common.config.partitionsamplingparameter attribute)": [[2, "mlrl.common.config.PartitionSamplingParameter.OPTION_HOLDOUT_SET_SIZE"]], "option_interval (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.OPTION_INTERVAL"]], "option_max_conditions (mlrl.common.config.ruleinductionparameter attribute)": [[2, "mlrl.common.config.RuleInductionParameter.OPTION_MAX_CONDITIONS"]], "option_max_head_refinements (mlrl.common.config.ruleinductionparameter attribute)": [[2, "mlrl.common.config.RuleInductionParameter.OPTION_MAX_HEAD_REFINEMENTS"]], "option_min_coverage (mlrl.common.config.ruleinductionparameter attribute)": [[2, "mlrl.common.config.RuleInductionParameter.OPTION_MIN_COVERAGE"]], "option_min_improvement (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.OPTION_MIN_IMPROVEMENT"]], "option_min_rules (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.OPTION_MIN_RULES"]], "option_min_support (mlrl.common.config.ruleinductionparameter attribute)": [[2, "mlrl.common.config.RuleInductionParameter.OPTION_MIN_SUPPORT"]], "option_num_iterations (mlrl.common.config.sequentialpostoptimizationparameter attribute)": [[2, "mlrl.common.config.SequentialPostOptimizationParameter.OPTION_NUM_ITERATIONS"]], "option_num_past (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.OPTION_NUM_PAST"]], "option_num_recent (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.OPTION_NUM_RECENT"]], "option_num_retained (mlrl.common.config.featuresamplingparameter attribute)": [[2, "mlrl.common.config.FeatureSamplingParameter.OPTION_NUM_RETAINED"]], "option_recalculate_predictions (mlrl.common.config.ruleinductionparameter attribute)": [[2, "mlrl.common.config.RuleInductionParameter.OPTION_RECALCULATE_PREDICTIONS"]], "option_refine_heads (mlrl.common.config.sequentialpostoptimizationparameter attribute)": [[2, "mlrl.common.config.SequentialPostOptimizationParameter.OPTION_REFINE_HEADS"]], "option_remove_unused_rules (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.OPTION_REMOVE_UNUSED_RULES"]], "option_stop_interval (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.OPTION_STOP_INTERVAL"]], "option_update_interval (mlrl.common.config.globalpruningparameter attribute)": [[2, "mlrl.common.config.GlobalPruningParameter.OPTION_UPDATE_INTERVAL"]], "options (class in mlrl.common.options)": [[2, "mlrl.common.options.Options"]], "ordinalattributelearner (class in mlrl.common.learners)": [[2, "mlrl.common.learners.OrdinalAttributeLearner"]], "partition_sampling_random (mlrl.common.config.partitionsamplingparameter attribute)": [[2, "mlrl.common.config.PartitionSamplingParameter.PARTITION_SAMPLING_RANDOM"]], "parallelpredictionparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.ParallelPredictionParameter"]], "parallelrulerefinementparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.ParallelRuleRefinementParameter"]], "parallelstatisticupdateparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.ParallelStatisticUpdateParameter"]], "parameter (class in mlrl.common.config)": [[2, "mlrl.common.config.Parameter"]], "partitionsamplingparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.PartitionSamplingParameter"]], "rule_induction_top_down_beam_search (mlrl.common.config.ruleinductionparameter attribute)": [[2, "mlrl.common.config.RuleInductionParameter.RULE_INDUCTION_TOP_DOWN_BEAM_SEARCH"]], "rule_induction_top_down_greedy (mlrl.common.config.ruleinductionparameter attribute)": [[2, "mlrl.common.config.RuleInductionParameter.RULE_INDUCTION_TOP_DOWN_GREEDY"]], "rule_pruning_irep (mlrl.common.config.rulepruningparameter attribute)": [[2, "mlrl.common.config.RulePruningParameter.RULE_PRUNING_IREP"]], "ruleinductionparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.RuleInductionParameter"]], "rulelearner (class in mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.RuleLearner"]], "rulelearner.incrementalpredictor (class in mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.RuleLearner.IncrementalPredictor"]], "rulelearner.incrementalprobabilitypredictor (class in mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.RuleLearner.IncrementalProbabilityPredictor"]], "rulelearner.nativeincrementalpredictor (class in mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.RuleLearner.NativeIncrementalPredictor"]], "rulelearner.nativeincrementalprobabilitypredictor (class in mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.RuleLearner.NativeIncrementalProbabilityPredictor"]], "rulepruningparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.RulePruningParameter"]], "sequentialpostoptimizationparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.SequentialPostOptimizationParameter"]], "sizestoppingcriterionparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.SizeStoppingCriterionParameter"]], "sparseformat (class in mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.SparseFormat"]], "sparsepolicy (class in mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.SparsePolicy"]], "true (mlrl.common.options.booleanoption attribute)": [[2, "mlrl.common.options.BooleanOption.TRUE"]], "timestoppingcriterionparameter (class in mlrl.common.config)": [[2, "mlrl.common.config.TimeStoppingCriterionParameter"]], "add_to_argument_parser() (mlrl.common.config.nominalparameter method)": [[2, "mlrl.common.config.NominalParameter.add_to_argument_parser"]], "add_to_argument_parser() (mlrl.common.config.numericalparameter method)": [[2, "mlrl.common.config.NumericalParameter.add_to_argument_parser"]], "add_to_argument_parser() (mlrl.common.config.parameter method)": [[2, "mlrl.common.config.Parameter.add_to_argument_parser"]], "add_value() (mlrl.common.config.nominalparameter method)": [[2, "mlrl.common.config.NominalParameter.add_value"]], "apply_next() (mlrl.common.learners.incrementallearner.incrementalpredictor method)": [[2, "mlrl.common.learners.IncrementalLearner.IncrementalPredictor.apply_next"]], "apply_next() (mlrl.common.rule_learners.rulelearner.incrementalpredictor method)": [[2, "mlrl.common.rule_learners.RuleLearner.IncrementalPredictor.apply_next"]], "apply_next() (mlrl.common.rule_learners.rulelearner.incrementalprobabilitypredictor method)": [[2, "mlrl.common.rule_learners.RuleLearner.IncrementalProbabilityPredictor.apply_next"]], "apply_next() (mlrl.common.rule_learners.rulelearner.nativeincrementalpredictor method)": [[2, "mlrl.common.rule_learners.RuleLearner.NativeIncrementalPredictor.apply_next"]], "apply_next() (mlrl.common.rule_learners.rulelearner.nativeincrementalprobabilitypredictor method)": [[2, "mlrl.common.rule_learners.RuleLearner.NativeIncrementalProbabilityPredictor.apply_next"]], "argument_name (mlrl.common.config.parameter property)": [[2, "mlrl.common.config.Parameter.argument_name"]], "configure() (mlrl.common.config.nominalparameter method)": [[2, "mlrl.common.config.NominalParameter.configure"]], "configure() (mlrl.common.config.numericalparameter method)": [[2, "mlrl.common.config.NumericalParameter.configure"]], "configure() (mlrl.common.config.parameter method)": [[2, "mlrl.common.config.Parameter.configure"]], "configure_argument_parser() (in module mlrl.common.config)": [[2, "mlrl.common.config.configure_argument_parser"]], "configure_rule_learner() (in module mlrl.common.config)": [[2, "mlrl.common.config.configure_rule_learner"]], "create() (mlrl.common.options.options class method)": [[2, "mlrl.common.options.Options.create"]], "create_binary_predictor() (in module mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.create_binary_predictor"]], "create_kwargs_from_parameters() (in module mlrl.common.config)": [[2, "mlrl.common.config.create_kwargs_from_parameters"]], "create_probability_predictor() (in module mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.create_probability_predictor"]], "create_score_predictor() (in module mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.create_score_predictor"]], "create_sklearn_compatible_probabilities() (in module mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.create_sklearn_compatible_probabilities"]], "create_sparse_policy() (in module mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.create_sparse_policy"]], "enforce_2d() (in module mlrl.common.arrays)": [[2, "mlrl.common.arrays.enforce_2d"]], "enforce_dense() (in module mlrl.common.arrays)": [[2, "mlrl.common.arrays.enforce_dense"]], "fit() (mlrl.common.learners.learner method)": [[2, "mlrl.common.learners.Learner.fit"]], "format_dict_keys() (in module mlrl.common.format)": [[2, "mlrl.common.format.format_dict_keys"]], "format_enum_values() (in module mlrl.common.format)": [[2, "mlrl.common.format.format_enum_values"]], "format_string_set() (in module mlrl.common.format)": [[2, "mlrl.common.format.format_string_set"]], "get_bool() (mlrl.common.options.options method)": [[2, "mlrl.common.options.Options.get_bool"]], "get_float() (mlrl.common.options.options method)": [[2, "mlrl.common.options.Options.get_float"]], "get_int() (mlrl.common.options.options method)": [[2, "mlrl.common.options.Options.get_int"]], "get_num_next() (mlrl.common.learners.incrementallearner.incrementalpredictor method)": [[2, "mlrl.common.learners.IncrementalLearner.IncrementalPredictor.get_num_next"]], "get_num_next() (mlrl.common.rule_learners.rulelearner.incrementalpredictor method)": [[2, "mlrl.common.rule_learners.RuleLearner.IncrementalPredictor.get_num_next"]], "get_num_next() (mlrl.common.rule_learners.rulelearner.nativeincrementalpredictor method)": [[2, "mlrl.common.rule_learners.RuleLearner.NativeIncrementalPredictor.get_num_next"]], "get_string() (mlrl.common.options.options method)": [[2, "mlrl.common.options.Options.get_string"]], "has_next() (mlrl.common.learners.incrementallearner.incrementalpredictor method)": [[2, "mlrl.common.learners.IncrementalLearner.IncrementalPredictor.has_next"]], "has_next() (mlrl.common.rule_learners.rulelearner.nativeincrementalpredictor method)": [[2, "mlrl.common.rule_learners.RuleLearner.NativeIncrementalPredictor.has_next"]], "is_sparse() (in module mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.is_sparse"]], "mlrl.common": [[2, "module-mlrl.common"]], "mlrl.common.arrays": [[2, "module-mlrl.common.arrays"]], "mlrl.common.config": [[2, "module-mlrl.common.config"]], "mlrl.common.data_types": [[2, "module-mlrl.common.data_types"]], "mlrl.common.format": [[2, "module-mlrl.common.format"]], "mlrl.common.learners": [[2, "module-mlrl.common.learners"]], "mlrl.common.options": [[2, "module-mlrl.common.options"]], "mlrl.common.rule_learners": [[2, "module-mlrl.common.rule_learners"]], "nominal_attribute_indices (mlrl.common.learners.nominalattributelearner attribute)": [[2, "mlrl.common.learners.NominalAttributeLearner.nominal_attribute_indices"]], "ordinal_attribute_indices (mlrl.common.learners.ordinalattributelearner attribute)": [[2, "mlrl.common.learners.OrdinalAttributeLearner.ordinal_attribute_indices"]], "parse() (mlrl.common.options.booleanoption static method)": [[2, "mlrl.common.options.BooleanOption.parse"]], "parse_param() (in module mlrl.common.options)": [[2, "mlrl.common.options.parse_param"]], "parse_param_and_options() (in module mlrl.common.options)": [[2, "mlrl.common.options.parse_param_and_options"]], "predict() (mlrl.common.learners.learner method)": [[2, "mlrl.common.learners.Learner.predict"]], "predict_incrementally() (mlrl.common.learners.incrementallearner method)": [[2, "mlrl.common.learners.IncrementalLearner.predict_incrementally"]], "predict_proba() (mlrl.common.learners.learner method)": [[2, "mlrl.common.learners.Learner.predict_proba"]], "predict_proba_incrementally() (mlrl.common.learners.incrementallearner method)": [[2, "mlrl.common.learners.IncrementalLearner.predict_proba_incrementally"]], "should_enforce_sparse() (in module mlrl.common.rule_learners)": [[2, "mlrl.common.rule_learners.should_enforce_sparse"]]}})